import React, { useState, useEffect } from "react";

type Meal = {
  idMeal: string;
  strMeal: string;
  strMealThumb: string;
  strCategory?: string;
  strArea?: string;
  strInstructions?: string;
  strYoutube?: string;
  [key: string]: any;
};

function extractIngredients(meal: Meal) {
  const ingredients: string[] = [];
  for (let i = 1; i <= 20; i++) {
    const ing = meal[`strIngredient${i}`];
    const measure = meal[`strMeasure${i}`];
    if (ing && ing.trim()) ingredients.push(`${ing} - ${measure}`);
  }
  return ingredients;
}

export default function App() {
  const [query, setQuery] = useState("");
  const [meals, setMeals] = useState<Meal[]>([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");
  const [selectedMeal, setSelectedMeal] = useState<Meal | null>(null);

  const searchMeals = async () => {
    if (!query.trim()) {
      setError("Please enter an ingredient.");
      return;
    }
    setError("");
    setLoading(true);
    try {
      const res = await fetch(
        `https://www.themealdb.com/api/json/v1/1/filter.php?i=${encodeURIComponent(
          query
        )}`
      );
      const data = await res.json();
      if (!data.meals) {
        setMeals([]);
        setError("No recipes found.");
      } else {
        setMeals(data.meals);
      }
    } catch {
      setError("Failed to fetch recipes.");
    } finally {
      setLoading(false);
    }
  };

  const getMealDetails = async (id: string) => {
    try {
      const res = await fetch(
        `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`
      );
      const data = await res.json();
      setSelectedMeal(data.meals[0]);
    } catch {
      setError("Failed to load details.");
    }
  };

  return (
    <div style={{ padding: 20, fontFamily: "Arial, sans-serif" }}>
      <h1>üç≥ Recipe Ideas</h1>
      <p>Find recipes by ingredient (e.g., chicken, rice).</p>

      <div style={{ display: "flex", gap: "10px", margin: "10px 0" }}>
        <input
          value={query}
          onChange={(e) => setQuery(e.target.value)}
          placeholder="Enter an ingredient..."
          style={{ flex: 1, padding: "10px" }}
        />
        <button onClick={searchMeals}>Search</button>
      </div>

      {loading && <p>Loading...</p>}
      {error && <p style={{ color: "red" }}>{error}</p>}

      <div
        style={{
          display: "grid",
          gridTemplateColumns: "repeat(auto-fill, minmax(200px, 1fr))",
          gap: "12px",
          marginTop: "20px",
        }}
      >
        {meals.map((meal) => (
          <div
            key={meal.idMeal}
            style={{
              border: "1px solid #ddd",
              padding: "10px",
              borderRadius: "8px",
              textAlign: "center",
              background: "#fafafa",
            }}
          >
            <img
              src={meal.strMealThumb}
              alt={meal.strMeal}
              style={{ width: "100%", borderRadius: "8px" }}
            />
            <h3>{meal.strMeal}</h3>
            <button onClick={() => getMealDetails(meal.idMeal)}>
              View Recipe
            </button>
          </div>
        ))}
      </div>

      {selectedMeal && (
        <div
          style={{
            position: "fixed",
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            background: "rgba(0,0,0,0.6)",
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
          }}
          onClick={() => setSelectedMeal(null)}
        >
          <div
            style={{
              background: "white",
              padding: "20px",
              borderRadius: "8px",
              maxWidth: "600px",
              width: "90%",
              maxHeight: "80vh",
              overflowY: "auto",
            }}
            onClick={(e) => e.stopPropagation()}
          >
            <h2>{selectedMeal.strMeal}</h2>
            <img
              src={selectedMeal.strMealThumb}
              alt={selectedMeal.strMeal}
              style={{ width: "100%", borderRadius: "8px" }}
            />
            <h3>Ingredients</h3>
            <ul>
              {extractIngredients(selectedMeal).map((ing, i) => (
                <li key={i}>{ing}</li>
              ))}
            </ul>
            <h3>Instructions</h3>
            <p>{selectedMeal.strInstructions}</p>
            {selectedMeal.strYoutube && (
              <p>
                <a
                  href={selectedMeal.strYoutube}
                  target="_blank"
                  rel="noreferrer"
                >
                  Watch on YouTube
                </a>
              </p>
            )}
            <button onClick={() => setSelectedMeal(null)}>Close</button>
          </div>
        </div>
      )}
    </div>
  );
}

